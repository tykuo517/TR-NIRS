%{
arrange the calculated OP error meam, std or confidence interval

Benjamin Kao
Last update: 2021/03/29
%}

clc;clear;close all; clearvars -global;

%% param
% fitting_dir_arr={'test_fitting_2023-12-12-11-59-43'};
% fitting_SDS_dir_arr={'fitting_tr1_gate12','fitting_tr1_gate1234','fitting_tr1_gate123456','fitting_tr1_gate12345678', ...
%                     'fitting_tr12_gate12','fitting_tr12_gate1234','fitting_tr12_gate123456','fitting_tr12_gate12345678', ...
%                     'fitting_tr123_gate12','fitting_tr123_gate1234','fitting_tr123_gate123456','fitting_tr123_gate12345678' ...
%                     'fitting_tr1234_gate12','fitting_tr1234_gate1234','fitting_tr1234_gate123456','fitting_tr1234_gate12345678'};
% fitting_dir_index=ones(1,16);  %[1 1 1 1 1 1];
% add_noise_arr=zeros(1,16);  %0 0 0 0 0 0];
% fitting_name_arr={'1','2','3','4','1','2','3','4','1','2','3','4','1','2','3','4'}; %'SDS 12 merged no noise',

fitting_dir_arr={'test_fitting_2023-12-12-11-59-43'};
fitting_SDS_dir_arr={'fitting_cw1','fitting_cw12','fitting_cw123','fitting_cw1234','fitting_cw12345','fitting_cw123456'};

fitting_dir_index=[1 1 1 1 1 1];  %[1 1 1 1 1 1];
add_noise_arr=[0 0 0 0 0 0];   %0 0 0 0 0 0];
fitting_name_arr={'one SDS','one SDS','3','4','1','2','3','4','1','2','3','4','1','2','3','4'}; %'SDS 12 merged no noise',

OP_param={'\mu_{a,scalp}','\mu_{s,scalp}','\mu_{a,skull}','\mu_{s,skull}','\mu_{a,GM}','\mu_{s,GM}'};

%% main
std_arr=[];
mean_arr=[];
RMSE_arr=[];
ci_arr={};
for i=1:3
    ci_arr{i}=[];
end

for i=1:length(fitting_SDS_dir_arr)
    if add_noise_arr(i)==0
        to_load_name='OP_error_arr_noError.mat';
    else
        to_load_name='OP_error_arr_Error.mat';
    end
    error_info=load(fullfile(fitting_dir_arr{fitting_dir_index(i)},'arrangement',fitting_SDS_dir_arr{i},to_load_name));
    
    RMSE_arr(i,:)=sqrt(mean(error_info.OP_error_arr.^2,[1 3]));
    
    for opi=1:6
        for ci_l=1:1 % confidence level
            for j=1:2
                ci_arr{ci_l}(i,opi,j)=error_info.OP_error_CI{opi}(ci_l,j);
            end
        end
        std_arr(i,opi)=error_info.total_std_error_arr(opi);
        mean_arr(i,opi)=error_info.total_mean_OP_error_arr(opi);
    end
end

%% output the mean error
fprintf('mean error:\n');
fprintf('| op | mua1 | mus1 | mua2 | mus2 | mua4 | mus4 |\n|:------ | ---- | ---- | ---- |:---- | ---- |:---- |\n'); % header
for i=1:length(fitting_SDS_dir_arr)
    fprintf('|%s',fitting_name_arr{i});
    for opi=1:6
        fprintf('|%.2f%%',mean_arr(i,opi)*100);
    end
    fprintf('|\n');
end

%% output the error std
fprintf('\nerror std:\n');
fprintf('| op | mua1 | mus1 | mua2 | mus2 | mua4 | mus4 |\n|:------ | ---- | ---- | ---- |:---- | ---- |:---- |\n'); % header
for i=1:length(fitting_SDS_dir_arr)
    fprintf('|%s',fitting_name_arr{i});
    for opi=1:6
        fprintf('|%.2f%%',std_arr(i,opi)*100);
    end
    fprintf('|\n');
end

%% output the RMSPE
fprintf('\nRMSPE:\n');
fprintf('| op | mua1 | mus1 | mua2 | mus2 | mua4 | mus4 |\n|:------ | ---- | ---- | ---- |:---- | ---- |:---- |\n'); % header
for i=1:length(fitting_SDS_dir_arr)
    fprintf('|%s',fitting_name_arr{i});
    for opi=1:6
        fprintf('|%.2f%%',RMSE_arr(i,opi)*100);
    end
    fprintf('|\n');
end

% % plot RMSE in bar chart
% % RMSE_arr=[RMSE_arr; 0.1839 0.0747 0.3852 0.1419 0.2665 0.6902];
% figure('Position',[0 0 640 480]);
% y=100*RMSE_arr';
% b=bar(y,'hist');
% xticklabels(OP_param);
% ylabel('RMSE (%)');
% legend([fitting_name_arr 'CW'],'Location','northwest');
% mkdir('results')
% print(fullfile('results','OP_result_RMSE_bar.png'),'-dpng','-r200');


% plot RMSE in line chart
% RMSE_arr=[RMSE_arr; 0.1839 0.0747 0.3852 0.1419 0.2665 0.6902];
figure('Position',[0 0 640 480]);
line_prop={'*','x','square','diamond','^','v'};
y=100*RMSE_arr;
for p=1:size(RMSE_arr,2)
    plot(RMSE(:,p),line_prop{p});
    hold on
end
xlabel('number of SDS');
ylabel('RMSE (%)');
legend([fitting_name_arr 'CW'],'Location','northwest');
mkdir('results')
print(fullfile('results','OP_result_RMSE_bar.png'),'-dpng','-r200');


% heatmap for TR data (num_SDS and num_gate used for fitting)
sub_index=[1 4 2 5 3 6];
fig=figure('Position',[0 0 1920 1080]);
ti=tiledlayout(fig,2,3);
h=gobjects(6,1);
for p=1:size(RMSE_arr,2)
    ax=nexttile(sub_index(p));
    temp_to_plot=100*RMSE_arr(:,p);
    to_plot=reshape(temp_to_plot,4,4);
%     h=redbluecmap(to_plot);
    h(p)=heatmap(to_plot,'Colormap', parula,'YData', ["2" "4" "6" "8"],'ColorbarVisible','off','FontSize',14);
    title(OP_param{p});
    xlabel('number of SDS');
    ylabel('number of gate');
    h(p).YDisplayData=flipud(h(p).YDisplayData);
    grid off
end

colorLims=vertcat(h.ColorLimits);
globalColorLim=[min(colorLims(:,1)), max(colorLims(:,2))];
set(h,'ColorLimits', globalColorLim);

ax=axes(ti,'visible','off','Colormap',h(1).Colormap,'CLim',globalColorLim,'FontSize',14);
cb=colorbar(ax);
ylabel(cb,'(%)','FontSize',16,'Rotation',270);
cb.Label.Position(1) = 5;
cb.Layout.Tile='East';
print(fullfile('results',['OP_result_RMSE_bar_op.png']),'-dpng','-r200');


%% output the confidence interval
fprintf('\nconfidence interval:\n');
for ci_l=1:1
    fprintf('confidence level %f:\n',error_info.confidence_arr(ci_l));
    fprintf('| op | mua1 | mus1 | mua2 | mus2 | mua4 | mus4 |\n|:------ | ---- | ---- | ---- |:---- | ---- |:---- |\n'); % header
    for i=1:length(fitting_SDS_dir_arr)
        fprintf('|%s',fitting_name_arr{i});
        for opi=1:6
            fprintf('|');
            for j=1:2
                fprintf('%.2f%%',ci_arr{ci_l}(i,opi,j)*100);
                if j==1
                    fprintf('~');
                end
            end
        end
        fprintf('|\n');
    end
end